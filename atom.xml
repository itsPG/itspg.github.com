<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[itsPG.org]]></title>
  <link href="http://itsPG.github.com/atom.xml" rel="self"/>
  <link href="http://itsPG.github.com/"/>
  <updated>2013-01-13T18:29:13+08:00</updated>
  <id>http://itsPG.github.com/</id>
  <author>
    <name><![CDATA[PG]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[git delete remote branch / force update]]></title>
    <link href="http://itsPG.github.com/blog/2013/01/13/git-delete-remote-branch-slash-force-update/"/>
    <updated>2013-01-13T17:50:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2013/01/13/git-delete-remote-branch-slash-force-update</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[git memo]]></title>
    <link href="http://itsPG.github.com/blog/2013/01/13/git-memo/"/>
    <updated>2013-01-13T17:42:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2013/01/13/git-memo</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[將github上的多筆commits合併成為一條commit]]></title>
    <link href="http://itsPG.github.com/blog/2013/01/13/git-squash-master-commits/"/>
    <updated>2013-01-13T17:25:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2013/01/13/git-squash-master-commits</id>
    <content type="html"><![CDATA[<p>翻修github上的README.md的時候，每更改一次都是一條新的commit，多修改幾次之後master就拉出長長的一條線，感覺不是很必要，這邊教你怎樣將遠端多筆commits強制合併為一條</p>

<p>這個範例目前僅限於要合併的commits位於尾端，至於要怎樣整合中間的commits這個我現在git還不夠熟，不敢亂測&#8230;</p>

<!-- more -->


<p>** Step 1</p>

<p><code>git branch squash</code> 先開一個新的分支來儲存我們目前master所做的修改」</p>

<p>** Step 2</p>

<p><code>git log</code> 看一下log檔，找出想要倒回去的時間點，以這個例子來說是154b5d</p>

<pre><code>commit 154b5d78bcbab2b4513ba02c0104cf45422d6c8a
Author: PG &lt;smartPG@gmail.com&gt;
Date:   Fri Dec 7 15:08:18 2012 -0800

    Initial commit
</code></pre>

<p>** Step 3</p>

<p><code>git reset --hard 154b5d</code> 強制reset</p>

<p>** Step 4</p>

<p><code>git checkout squash</code> checkout之前儲存的分支</p>

<p>** Step 5</p>

<p><code>git rebase -i master</code> 將目前的squash分支接到master上</p>

<p>** Step 5-1</p>

<p>此時會叫出編輯器畫面顯示出squash分支與master領先的commits，讓你選擇如何合併commits，commits出現順序是從舊的到新的，也就是說最新的commit會出現在編輯器最下面</p>

<pre><code>pick e5ca022 a
pick 1e4fcd3 b
pick 796bef9 c
pick 7897670 d
pick d0b99a9 e
</code></pre>

<p>將內容改成以下形式後，存檔離開</p>

<pre><code>pick e5ca022 a
s 1e4fcd3 b
s 796bef9 c
s 7897670 d
pick d0b99a9 e
</code></pre>

<p>這代表我們要把commit b, c, d合併到commit a，完成合併之後僅會留下commit a與commit e</p>

<p>** Step 5-2</p>

<p>接下來會出現若干次編輯器畫面，讓你輸入修改後的commit訊息</p>

<pre><code># This is a combination of 4 commits.
# The first commit's message is:


squash a~d test

# This is the 2nd commit message:



# This is the 3rd commit message:



# This is the 4th commit message:
</code></pre>

<p>這邊主要是讓你看一下你選擇合併的commit記錄，並輸入新的commit 訊息，所有＃開頭的行並不會被算到commit訊息裡面</p>

<p>我輸入squash a~d test並刪除多餘的訊息，合併就完成了</p>

<p>** Step 6</p>

<p><code>git checkout master</code> 回到master分支</p>

<p>** Step 7</p>

<p><code>git merge squash</code> 合併squash分支</p>

<p>** Step 8</p>

<p>git push &#8211;force origin master 強制更新遠端的master</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[google apps]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/google-apps/"/>
    <updated>2012-12-09T07:47:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/google-apps</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[x10]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/x10/"/>
    <updated>2012-12-09T07:46:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/x10</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[github for edu]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/github-for-edu/"/>
    <updated>2012-12-09T07:46:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/github-for-edu</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[piano guys]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/piano-guys/"/>
    <updated>2012-12-09T07:45:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/piano-guys</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[books vs iread]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/books-vs-iread/"/>
    <updated>2012-12-09T07:45:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/books-vs-iread</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[taaze sell books]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/taaze-sell-books/"/>
    <updated>2012-12-09T07:44:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/taaze-sell-books</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[bunny_charlotte]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/bunny-charlotte/"/>
    <updated>2012-12-09T07:42:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/bunny-charlotte</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[分享] EcVps 5GB免費的架站空間 500GB流量 支援PHP MySQL]]></title>
    <link href="http://itsPG.github.com/blog/2012/12/09/ecvps/"/>
    <updated>2012-12-09T07:37:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/12/09/ecvps</id>
    <content type="html"><![CDATA[<p>最近發現的好康，這年頭要找到免費的Free Website Hosting真的頗難，所以老實說我也不知道這個免費服務能夠活多久，最好抱持著掛掉正常，用到算賺到的心態下去使用會好過一點</p>

<!-- more -->


<p>網址： <strong><a href="http://www.ecvps.com/client/cart.php?gid=3">點此申請</a></strong></p>

<p>申請完之後去信箱收信就會有帳號密碼摟，如果沒有域名可用的話申請的時候可以選擇使用他們提供的免費域名，而我手上的itsPG.org剛好沒地方擺，就先拿來當白老鼠了。</p>

<p>實測的結果是網路速度偏慢，尤其是在FTP上傳資料的部份相當程度的考驗了架站的耐心，網頁瀏覽速度尚可，目前使用中，如果有後續的消息的話我會繼續更新這篇文章。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[FreeBSD 9.0 快速安裝教學 （上）]]></title>
    <link href="http://itsPG.github.com/blog/2012/08/24/freebsd9-dot-0-install-note/"/>
    <updated>2012-08-24T23:27:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/08/24/freebsd9-dot-0-install-note</id>
    <content type="html"><![CDATA[<p>之前安裝到一半的機器，一邊安裝軟體，一邊弄教學。結果機器堪用之後就懶得繼續裝了（遮臉）。</p>

<p>在這邊分享一下我做的筆記</p>

<!-- more -->


<h2>1.先做FreeBSD的安全更新</h2>

<p>freebsd-update fetch
freebsd-update install</p>

<h2>2.編輯<code>/etc/makefile.conf</code>，加入以下設定</h2>

<pre><code>SUPHOST= cvsup.tw.freebsd.org
SUP_UPDATE= yes
SUP= /usr/bin/csup
SUPFLAGS= -g -L 2
SUPFILE= /usr/share/examples/cvsup/stable-supfile
PORTSSUPFILE= /usr/share/examples/cvsup/ports-supfile
</code></pre>

<h2>3.更新ports tree</h2>

<pre><code>cd /usr/ports
make update
</code></pre>

<h2>4.編輯<code>/etc/rc.conf</code>，加入</h2>

<pre><code>ntpdate_enable="YES"
ntpdate_flags="clock.stdtime.gov.tw"
sshd_enable="YES"
usbd_enable="YES"
smbftpd_enable="YES"
smbftpd_flags="-D"
mysql_enable="YES"
apache22_enable="YES"
snmpd_enable="YES"
samba_enable="YES"
rsyncd_enable="YES"
named_enable="YES"
</code></pre>

<h2>5.安裝wget</h2>

<pre><code>cd /usr/ports/ftp/wget
make config-recursive
make install clean
</code></pre>

<h2>6.安裝smbftpd</h2>

<pre><code>cd /tmp
wget "http://twbsd.org/download/download.php?file=smbftpd/smbftpd-2.4.tar.gz"
tar -zxvf download.php\?file=smbftpd%2Fsmbftpd-2.4.tar.gz
cd smbftpd
./configure
make
make install
</code></pre>

<h2>7.安裝Apache22</h2>

<pre><code>cd /usr/ports/www/apache22
make config-recursive
make install clean
</code></pre>

<p>接下來改一下apache設定值
<code>ee /usr/local/etc/apache22/httpd.conf</code></p>

<h3>7.1 找到DirectoryIndex 加入對.php首頁的支援</h3>

<p>DirectoryIndex index.php index.htm index.html</p>

<h3>7.2 找到# Include etc/apache22/extra/httpd-userdir.conf</h3>

<p>將前面的#號消掉,啟用家目錄功能</p>

<h3>7.3 在檔案後面加上下面這兩行，啟動對PHP格式的支援</h3>

<p>AddType application/x-httpd-php .php
AddType application/x-httpd-php-source .phps</p>

<h2>8.安裝PHP</h2>

<pre><code>cd /usr/ports/lang/php5
make config-recursive
make install clean
</code></pre>

<p>此時必須勾選&#8221;Build Apache module&#8221;
否則Apache會不認得.php副檔名</p>

<h2>9.安裝PHP5外掛 (選擇性)</h2>

<pre><code>cd /usr/ports/lang/php5-extensions
make config-recursive
make install clean
</code></pre>

<h2>10.安裝MySQL server (會順便把client一起裝起來)</h2>

<pre><code>cd /usr/ports/databases/mysql55-server/
make config-recursive
make install clean
</code></pre>

<h2>11.安裝phpMyAdmin</h2>

<pre><code>cd /usr/ports/databases/phpmyadmin
make install clean
</code></pre>

<h2>12.設定MySQL環境</h2>

<h3>12.1. 啟動server</h3>

<p>/usr/local/etc/rc.d/mysql-server restart</p>

<h3>12.2. 連上mysql資料庫,更新root密碼,</h3>

<p>/usr/local/bin/mysql mysql
UPDATE user SET password=password(’123456789′) where user=’root’;</p>

<h3>12.3. 重新啟動server</h3>

<p>/usr/local/etc/rc.d/mysql-server start</p>

<h3>12.4. 修改phpMyAdmin設定檔 – 伺服器部份</h3>

<p>ee /usr/local/etc/apache22/httpd.conf
增加 Alias /phpmyadmin/ “/usr/local/www/phpMyAdmin/&#8221;</p>

<h3>12.5.修改phpMyAdmin設定檔 – 程式本身部份</h3>

<p>cd /usr/local/www/phpMyAdmin
cp ./libraries/config.default.php ./config.inc.php
ee ./config.inc.php
把 $cfg[&#8216;Servers&#8217;][$i][&#8216;auth_type&#8217;] = ‘cookie’ ;
改成 $cfg[&#8216;Servers&#8217;][$i][&#8216;auth_type&#8217;] = ‘http’ ;</p>

<h2>13. 安裝vim (需要較多時間)</h2>

<p>第一次編譯到一半會失敗，估計是套件相依性沒設定好，
編譯第二次就會過了</p>

<pre><code>cd /usr/ports/editors/vim
make config-recursive
make install clean
make install clean
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[程設] Use http.cookiejar and urllib.request to POST login http webpage in Python 3.2]]></title>
    <link href="http://itsPG.github.com/blog/2012/08/13/use-python3-to-login-http-web/"/>
    <updated>2012-08-13T04:25:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/08/13/use-python3-to-login-http-web</id>
    <content type="html"><![CDATA[<p>My English is very poor, however I can&#8217;t find any useful information except the official manual when I googled this topic, so I write it down in English, hope this blog could help more people.</p>

<p>Keyword: cookielib http.cookiejar urllib.request login http webpagge Python 3.2
用python 3.2登入網頁 POST</p>

<!-- more -->


<p>I take this website for example : <a href="http://share.dmhy.org/user/login">share.dmhy.org</a></p>

<p>In this website, you need to type your account, password, and a captcha code to login.</p>

<h2>Step 1.  Include the lib, define some var</h2>

<pre><code>import http.cookiejar, urllib.request
import re, os
username = "PG@example.com"
password = "123456"
captcha = ""
</code></pre>

<h2>Step 2. Create the opener, which is using cookiejar for processing cookies.</h2>

<pre><code>cj = http.cookiejar.MozillaCookieJar()
opener = urllib.request.build_opener(urllib.request.HTTPCookieProcessor(cj))
</code></pre>

<h2>Step 3. Open the login page through opener, get captcha through opener, and save the captcha as a pic.</h2>

<pre><code>first_page = opener.open("http://share.dmhy.org/user/login").read().decode("utf-8")
m = re.search("common\/generate\-captcha\?code=([0-9]+)", first_page)
captcha_pic = opener.open("http://share.dmhy.org/common/generate-captcha?code=" + m.group(1)).read()
open("PG.jpg", 'wb').write(captcha_pic)
</code></pre>

<h2>Step 4. Ask user for the captcha</h2>

<pre><code>os.system("start PG.jpg");
captcha_code = input("Captcha : ");
</code></pre>

<h2>Step 5. send POST request</h2>

<pre><code>login_data = urllib.parse.urlencode    \
({                               \
    'email' : username,       \
    'password' : password,      \
    'login_node' : '0',        \
    'cookietime' : '315360000',         \
    'captcha_code' : captcha_code
}).encode("utf-8")
url = urllib.request.Request("http://share.dmhy.org/user/login", login_data)
url.add_header("User-Agent","Chrome/18.1.2.3")
</code></pre>

<p>Note that User-Agent is optional.</p>

<h2>Step 6. Get responsed data, show cookies, and save cookies as &#8220;cookie.txt&#8221;</h2>

<pre><code>ResponseData = opener.open(url).read().decode("utf8", 'ignore')
print(ResponseData)
for ind, cookie in enumerate(cj):
    print("%d - %s" %(ind, cookie))
cj.save("cookie.txt")
</code></pre>

<h2>Step 7. Next time when we need to login, you just need to load &#8220;cookie.txt&#8221;</h2>

<pre><code>cj = http.cookiejar.MozillaCookieJar()
cj.load("cookie.txt")
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[作品] 多檔案index.html自動產生工具 v0.4]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/22/auto-anime-list-creator/"/>
    <updated>2012-05-22T03:22:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/22/auto-anime-list-creator</id>
    <content type="html"><![CDATA[<p>這是一個大三時曾經想完成的大專案，目標是整合多檔案動畫的同步，評分，分享comment，以及自動整理的功能。可惜因為野心與能力不成正比而失敗告吹，最近稍微摸了一下Python，發現用Python開發比用c＋＋開發愉快多了，所以決定有機會的話，找時間慢慢完成這個專案。目前先以我最迫切需要的功能為優先實作對象。</p>

<!-- more -->


<h2>更新記錄</h2>

<ul>
<li>v0.4 增加Log功能</li>
<li>v0.3 增加顏色顯示，修改版面配置</li>
<li>v0.2 增加search list功能</li>
<li>v0.1 雛形</li>
</ul>


<h2>Gist:</h2>

<p><a href="https://gist.github.com/2764080">編號：2764080</a></p>

<h2>使用方法說明</h2>

<p>&#8230;大致上就是修改 port url 以及資料夾</p>

<p>我把需要改的地方都獨立出來放在檔案頂端了。</p>

<p>真的有人想要拿回去用卻又不知道怎樣修改的話再留言問我吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[程設] Python 3.2 在windows下的UTF8解決方案，解決can't decode以及亂碼的問題]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/python-utf8-fix-for-windows-terminal/"/>
    <updated>2012-05-21T05:08:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/python-utf8-fix-for-windows-terminal</id>
    <content type="html"><![CDATA[<p>以前用Ruby操作windows上的資料夾的時候，就有出現過類似的問題，google了老半天找不到堪用的解法，原先以為是Ruby在windows上的lib不夠成熟，久試未果，只好暫時放棄Ruby。</p>

<p>沒想到，最近開始用Python，發覺也有類似的問題，後來在stackoverflow上，找到了問題的所在，總歸是Windows的問題，但幸好回答問題的人有附上他對windows terminal的hack，用了這個解法之後，可以讓Python在Windows下正確無誤顯示utf8字元。</p>

<!-- more -->


<p>以下引用自StackOverflow的<a href="http://stackoverflow.com/questions/3789924/python-os-walk-and-japanese-filename-crash">這篇回答</a></p>

<blockquote><p>It seems like all answers so far are from Unix people who assume the Windows console is like a Unix terminal, which it is not.</p>

<p>The problem is that you can&#8217;t write Unicode output to the Windows console using the normal underlying file I/O functions. The Windows API WriteConsole needs to be used. Python should probably be doing this transparently, but it isn&#8217;t.</p>

<p>There&#8217;s a different problem if you redirect the output to a file: Windows text files are historically in the ANSI codepage, not Unicode. You can fairly safely write UTF-8 to text files in Windows these days, but Python doesn&#8217;t do that by default.</p>

<p>I think it should do these things, but here&#8217;s some code to make it happen. You don&#8217;t have to worry about the details if you don&#8217;t want to; just call ConsoleFile.wrap_standard_handles(). You do need PyWin installed to get access to the necessary APIs.</p></blockquote>

<p>這篇文章中也附上了他的解法，把它貼到程式裡面，並執行<code>ConsoleFile.wrap_standard_handles()</code>，就會幫你修正好摟。</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">import</span> <span class="nn">os</span><span class="o">,</span> <span class="nn">sys</span><span class="o">,</span> <span class="nn">io</span><span class="o">,</span> <span class="nn">win32api</span><span class="o">,</span> <span class="nn">win32console</span><span class="o">,</span> <span class="nn">pywintypes</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">change_file_encoding</span><span class="p">(</span><span class="n">f</span><span class="p">,</span> <span class="n">encoding</span><span class="p">):</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'><span class="sd">TextIOWrapper is missing a way to change the file encoding, so we have to</span>
</span><span class='line'><span class="sd">do it by creating a new one.</span>
</span><span class='line'><span class="sd">&quot;&quot;&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="n">errors</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">errors</span>
</span><span class='line'><span class="n">line_buffering</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">line_buffering</span>
</span><span class='line'><span class="c"># f.newlines is not the same as the newline parameter to TextIOWrapper.</span>
</span><span class='line'><span class="c"># newlines = f.newlines</span>
</span><span class='line'>
</span><span class='line'><span class="n">buf</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="n">detach</span><span class="p">()</span>
</span><span class='line'>
</span><span class='line'><span class="c"># TextIOWrapper defaults newline to \r\n on Windows, even though the underlying</span>
</span><span class='line'><span class="c"># file object is already doing that for us.  We need to explicitly say &quot;\n&quot; to</span>
</span><span class='line'><span class="c"># make sure we don&#39;t output \r\r\n; this is the same as the internal function</span>
</span><span class='line'><span class="c"># create_stdio.</span>
</span><span class='line'><span class="k">return</span> <span class="n">io</span><span class="o">.</span><span class="n">TextIOWrapper</span><span class="p">(</span><span class="n">buf</span><span class="p">,</span> <span class="n">encoding</span><span class="p">,</span> <span class="n">errors</span><span class="p">,</span> <span class="s">&quot;</span><span class="se">\n</span><span class="s">&quot;</span><span class="p">,</span> <span class="n">line_buffering</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">ConsoleFile</span><span class="p">:</span>
</span><span class='line'>    <span class="k">class</span> <span class="nc">FileNotConsole</span><span class="p">(</span><span class="ne">Exception</span><span class="p">):</span> <span class="k">pass</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">handle</span><span class="p">):</span>
</span><span class='line'>        <span class="n">handle</span> <span class="o">=</span> <span class="n">win32api</span><span class="o">.</span><span class="n">GetStdHandle</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">screen</span> <span class="o">=</span> <span class="n">win32console</span><span class="o">.</span><span class="n">PyConsoleScreenBufferType</span><span class="p">(</span><span class="n">handle</span><span class="p">)</span>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="bp">self</span><span class="o">.</span><span class="n">screen</span><span class="o">.</span><span class="n">GetConsoleMode</span><span class="p">()</span>
</span><span class='line'>        <span class="k">except</span> <span class="n">pywintypes</span><span class="o">.</span><span class="n">error</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
</span><span class='line'>            <span class="k">raise</span> <span class="n">ConsoleFile</span><span class="o">.</span><span class="n">FileNotConsole</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">write</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">s</span><span class="p">):</span>
</span><span class='line'>        <span class="bp">self</span><span class="o">.</span><span class="n">screen</span><span class="o">.</span><span class="n">WriteConsole</span><span class="p">(</span><span class="n">s</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">def</span> <span class="nf">close</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">pass</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">flush</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">pass</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">isatty</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span> <span class="k">return</span> <span class="bp">True</span>
</span><span class='line'>
</span><span class='line'>    <span class="nd">@staticmethod</span>
</span><span class='line'>    <span class="k">def</span> <span class="nf">wrap_standard_handles</span><span class="p">():</span>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="c"># There seems to be no binding for _get_osfhandle.</span>
</span><span class='line'>            <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span> <span class="o">=</span> <span class="n">ConsoleFile</span><span class="p">(</span><span class="n">win32api</span><span class="o">.</span><span class="n">STD_OUTPUT_HANDLE</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="n">ConsoleFile</span><span class="o">.</span><span class="n">FileNotConsole</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sys</span><span class="o">.</span><span class="n">stdout</span> <span class="o">=</span> <span class="n">change_file_encoding</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">stdout</span><span class="p">,</span> <span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'>        <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="o">.</span><span class="n">flush</span><span class="p">()</span>
</span><span class='line'>        <span class="k">try</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span> <span class="o">=</span> <span class="n">ConsoleFile</span><span class="p">(</span><span class="n">win32api</span><span class="o">.</span><span class="n">STD_ERROR_HANDLE</span><span class="p">)</span>
</span><span class='line'>        <span class="k">except</span> <span class="n">ConsoleFile</span><span class="o">.</span><span class="n">FileNotConsole</span><span class="p">:</span>
</span><span class='line'>            <span class="n">sys</span><span class="o">.</span><span class="n">stderr</span> <span class="o">=</span> <span class="n">change_file_encoding</span><span class="p">(</span><span class="n">sys</span><span class="o">.</span><span class="n">stderr</span><span class="p">,</span> <span class="s">&quot;utf-8&quot;</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">ConsoleFile</span><span class="o">.</span><span class="n">wrap_standard_handles</span><span class="p">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>要注意的是，使用這個hack之前，必須先裝<a href="http://stackoverflow.com/questions/3789924/python-os-walk-and-japanese-filename-crash">pywin32</a>，在此篇文章撰寫時，最新版本是Build 217，請依照你的windows版本以及Python版本下載合適的檔案，我第一次安裝到一半卡住，最後才發現原來我以前在裝Python的時候，不小心在64位元的win7上裝了32位元版的Python</p>

<p>另，這段hack的開頭的<code>import os, sys, io, win32api, win32console, pywintypes</code>跟結束的<code>ConsoleFile.wrap_standard_handles()</code>，我建議可以把它包進判斷作業系統的判斷式內，有助於我們撰寫跨平台的Python程式</p>

<pre><code>if sys.platform == "win32":
    import os, sys, io, win32api, win32console, pywintypes
</code></pre>

<p>以及</p>

<pre><code>if sys.platform == "win32":
    ConsoleFile.wrap_standard_handles()
</code></pre>

<p>以上，Enjoy your Python programming :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[開箱] Alter 夏綠蒂 運動夾克ver （シャルロット・デュノア　ジャージVer.）]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/alter-charlotte-dunois/"/>
    <updated>2012-05-21T04:38:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/alter-charlotte-dunois</id>
    <content type="html"><![CDATA[<p><img src="http://farm8.staticflickr.com/7233/7236404376_19378b54d5_z.jpg" alt="" /></p>

<p>當初就說過只要Alter出法國或者是出艾露露的Figure我必衝，去年秋天的時候Alter放出原形後，我立刻訂了一隻，經過漫長的等待後（似乎是延期過），日本總算在四月發售，並在四月底左右到我手中。</p>

<p>這是我這輩子第一隻Figure，對我來說頗有紀念價值，以下附上不專業開箱，有興趣的話可以點進來看看。</p>

<!-- more -->


<p>Alter官網連結：</p>

<p><a href="http://www.alter-web.jp/figure/12/03_2/index.html">シャルロット・デュノア　ジャージVer.</a></p>

<p>開箱</p>

<p><img src="http://farm8.staticflickr.com/7084/7236300230_3775a18ca6_z.jpg" alt="" />
<img src="http://farm8.staticflickr.com/7218/7236299764_b410113f24_z.jpg" alt="" />
<img src="http://farm9.staticflickr.com/8022/7236299518_8177bf2440_z.jpg" alt="" /></p>

<p>實際擺放情形</p>

<p><img src="http://farm8.staticflickr.com/7093/7236298670_393b8a9bd7_z.jpg" alt="" /></p>

<p>以下附上一張目前為止我最喜歡的同人圖</p>

<p><img src="http://farm6.staticflickr.com/5036/7236299264_87d04c1e6a_z.jpg" alt="" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[網管] 利用USB安裝FreeBSD / 製作FreeBSD的USB安裝碟]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/install-freebsd-by-usb/"/>
    <updated>2012-05-21T03:56:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/install-freebsd-by-usb</id>
    <content type="html"><![CDATA[<p>最近資訊社的機器有一台要重灌，想說除了練習FreeBSD的安裝之外，順便來試試看用USB安裝FreeBSD順不順，沒想到，使用 <a href="http://blog.tenyi.com/2011/07/freebsdusb.html">UNetbootin</a>解壓縮安裝檔到USB隨身碟上，居然有一萬七千多個檔，在我老舊的USB隨身碟上，居然要花兩個多小時製作。</p>

<p>Google了一下後，發現原來FreeBSD有提供記憶體img的安裝方式，將記憶體內容包到img裡面，安裝的時候直接複製到記憶體中，既可以當LiveCD用，也可以大幅提昇安裝USB碟的製作速度，（別忘了，隨身碟對小檔讀寫的能力都不是很理想，更何況我用的是好幾年前的便宜貨）</p>

<!-- more -->


<p>在Windows上，有一套軟體叫做 Image Writer for Windows，可以直接幫你從img檔案製作USB安裝碟。</p>

<p>在Linux / Unix / Mac上，也是有方法可以弄，不過這些方法我是從<a href="http://blog.tenyi.com/2011/07/freebsdusb.html">這篇blog</a>上看到的，以下轉貼僅供參考，我並沒有實際的操作過。</p>

<blockquote><p>先unmount隨身碟<br/><br/>
$ sudo umount /dev/sdc<br/>
<strong>Linux</strong>原本就可寫入MBR，所以只要：<br/>
$ sudo umount /dev/sdc<br/>
$ sudo dd if=FreeBSD-8.2-RELEASE-i386-memstick.img of=/dev/sdc bs=64k<br/>
<strong>Mac</strong>稍微麻煩一點，因為磁碟工具程式似乎不支援不認得的File System：<br/>
要知道mount到哪兒，可以在Terminal（終端機）看  <br/>
$ sudo mount  <br/>
若己經有檔案系統，可先別急著在Finder上按退出，因為會連device都退出 （這裏假設是 /dev/disk1） <br/>
$ sudo diskutil umount /dev/disk1  <br/>
或是  <br/>
$ sudo diskutil umount [你USB碟的Label名稱]  <br/>
接下來  <br/>
$ sudo dd if=FreeBSD-8.2-RELEASE-i386-memstick.img of=/dev/disk1 bs=64k  <br/></p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[閒聊] 特價，只要NT30的WinRAR]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/buy-winrar-for-just-nt30/"/>
    <updated>2012-05-21T03:05:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/buy-winrar-for-just-nt30</id>
    <content type="html"><![CDATA[<p>在得知了這個消息後，馬上用paypal刷了七套來玩。</p>

<p>潮爽的。</p>

<!-- more -->


<p>其實這次事件單純只是WinRAR合作（或是擁有的）的購物網站出現了價格轉換上的bug，WinRAR原價一套30美金，理論上轉換成台幣絕對不只台幣30塊錢這麼便宜，不過就在幾個月前的某天，程式轉換的部份爛掉啦，無論是用哪種幣值都是三十塊錢，也就是說，如果結帳時選擇幣值比台幣還要低的貨幣，一套WinRAR的價格可以壓到更低，在加上一次購買一定數量以上的WinRAR還會有另外一個特價，我記得我算到後來一次五套的價格甚至不到一百台票。</p>

<p>從G+上得知道這個消息之後，馬上拿出paypal來刷，一開始我刷了好幾次25套的單子，無奈都被人工審核檔下來，我猜想多半RAR那邊也不覺得會有人一口氣買25套而不先寄信殺價的吧，總之我的訂單都在過幾分鐘人工審核後，被購物網站擋了下來。</p>

<p>後來，我一次改刷一套，刷了兩次，都成功付款。WinRAR的購買流程是這樣的：填訂單，人工審核過了後給你付款連結，利用付款連結登入paypal付款，完成付款後收到WinRAR寄送的序號。在跑了這套流程兩次後，我拿到了兩組序號跟key，也就是說，我現在手上（總算）有兩套正版RAR啦！在測試兩次都成功後，我又嘗試性的刷了一筆5套的訂單，這次人工審核那邊有過，但寄過來的是一組五人授權的key，也就是說，五個人共用同一組key以及密碼。</p>

<p>雖然這次多少有點貪小便宜的心態，不過這也算是一次不錯的線上付款購買軟體的經驗，也算是給RAR Lab的一個實質的肯定以及鼓勵吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac ] 讓Mac筆電闔上螢幕的時候不進入待命模式]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/disable-lid-sleep-on-mac/"/>
    <updated>2012-05-21T03:03:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/disable-lid-sleep-on-mac</id>
    <content type="html"><![CDATA[<p>每次我的MBA一關上螢幕，下次重開的時候都要重抓wifi實在是有點麻煩，尤其是我的學校（交大）上課時人多的時候校內無線網路ip會不夠分，需要等待個約莫五分鐘才能排到可用的ip，導致每次想要離開座位的時候都沒辦法完全闔上筆電，實在是不太方便，從mac的選單裡面找，卻又找不到ok的修改方式。</p>

<p>還好有找到軟體可以解決關上螢幕電腦就會自動待命的問題。</p>

<!-- more -->


<p>軟體名稱：InsomniaX</p>

<p>目前最新版本： 2.0.1</p>

<p>下載位址：<a href="http://semaja2.net/archives/221">點我</a></p>

<p>在這個版本中，選擇『只有在插上電源時才關閉待命功能』的功能以及他的類似功能是壞的，也就是說，所有的設定都必須自己手動調整，關閉待命之後，記得在有需要的時候調回來，要不然習慣性的關閉螢幕當做待命，卻忘記自己有開這套程式，那就悲劇了。</p>

<p>不過，<span style='color:red;'>即使打開這個程式，闔上螢幕的時候也會自動關閉顯示器電源</span>，所以不用每次闔上蓋子的時候都要手動關閉顯示器啦。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[Mac] 關於Mac的螢幕截圖 (printscreen)]]></title>
    <link href="http://itsPG.github.com/blog/2012/05/21/printscreen-in-mac/"/>
    <updated>2012-05-21T02:47:00+08:00</updated>
    <id>http://itsPG.github.com/blog/2012/05/21/printscreen-in-mac</id>
    <content type="html"><![CDATA[<p>這篇筆記了一下怎樣在Mac裡面截圖，以及在mac bootcamp的windows下，怎樣擷取windows下的圖片</p>

<!-- more -->


<h1>1. On Mac</h1>

<h2>Shift + Command + 3 </h2>

<p>擷取整個畫面</p>

<h2>Shift + Command + 4</h2>

<p>利用滑鼠圈選擷取範圍</p>

<h2>Shift + Command + Space + 4</h2>

<p>擷取指定視窗</p>

<h1>2. On Windows</h1>

<h2>Fn + Shift + F11</h2>

<p>擷取整個營幕畫面(等同於printscreen)</p>

<h2>Fn + Shift + Alt + F11</h2>

<p>可以擷取正在使用中的視窗畫面(等同於Alt + printscreen)</p>
]]></content>
  </entry>
  
</feed>
